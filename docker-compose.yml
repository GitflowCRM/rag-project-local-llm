services:
  postgres:
    image: ankane/pgvector:latest
    container_name: rag-postgres
    env_file:
      - .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - rag-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER}']
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: rag-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - '${PGADMIN_PORT}:80'
    networks:
      - rag-network
    depends_on:
      - postgres

  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag-qdrant
    ports:
      - '6333:6333'
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - rag-network

  redis:
    image: redis:latest
    container_name: redis
    env_file:
      - .env
    ports:
      - '6379:6379'
    networks:
      - rag-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli -a ${REDIS_PASSWORD} ping | grep -q PONG']
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis-data:/data

networks:
  rag-network:
    driver: bridge

volumes:
  postgres_data:
  qdrant_data:
  redis-data:
